{{- if .Values.storage.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage
  labels:
    {{- include "enschedule.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.storage.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: storage
  template:
    metadata:
      {{- with .Values.storage.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: storage
    spec:
      {{- with .Values.storage.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enschedule.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.storage.podSecurityContext | nindent 8 }}
      containers:
        - name: storage
          securityContext:
            {{- toYaml .Values.storage.securityContext | nindent 12 }}
          image: "{{ .Values.storage.image.repository }}:{{ .Values.storage.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.storage.image.pullPolicy }}
          ports:
            - name: storage
              containerPort: 3456
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: storage
          readinessProbe:
            httpGet:
              path: /healthz
              port: storage
          resources:
            {{- toYaml .Values.storage.resources | nindent 12 }}

          env:
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: enstoreUsername
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: enstorePassword
            - name: PORT
              value: "3456"

          # Mount the volume if persistence is enabled
          volumeMounts:
            {{- if .Values.storage.persistence.enabled }}
            - name: {{ .Values.storage.persistence.volumeName | default "storage-data" }}
              mountPath: {{ .Values.storage.persistence.mountPath }}
            {{- end }}
            
      # Add the volume to the pod spec
      volumes:
        {{- if .Values.storage.persistence.enabled }}
        - name: {{ .Values.storage.persistence.volumeName | default "storage-data" }}
          {{- if .Values.storage.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.persistence.existingClaim }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "enschedule.fullname" . }}-{{ .Values.storage.persistence.volumeName | default "data" }}
          {{- end }}
        {{- end }}

      {{- with .Values.storage.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.storage.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.storage.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
