{{- if .Values.database }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  labels:
    {{- include "enschedule.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.database.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: database
  template:
    metadata:
      {{- with .Values.database.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: database
    spec:
      {{- with .Values.database.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enschedule.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.database.podSecurityContext | nindent 8 }}
      containers:
        - name: database
          securityContext:
            {{- toYaml .Values.database.securityContext | nindent 12 }}
          image: "{{ .Values.database.image.image }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command: ["sh", "-c", "pg_isready"]
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["sh", "-c", "pg_isready"]
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: pgPassword
          
          # Add volumeMount if persistence is enabled
          volumeMounts:
            {{- if .Values.database.persistence.enabled }}
            - name: {{ .Values.database.persistence.volumeName | default "postgres-data" }}
              mountPath: {{ .Values.database.persistence.mountPath }}
            {{- end }}
      
      # Add volumes if persistence is enabled
      volumes:
        {{- if .Values.database.persistence.enabled }}
        - name: {{ .Values.database.persistence.volumeName | default "postgres-data" }}
          {{- if .Values.database.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.database.persistence.existingClaim }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "enschedule.fullname" . }}-{{ .Values.database.persistence.volumeName | default "data" }}
          {{- end }}
        {{- end }}

      {{- with .Values.database.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
