{{- if .Values.worker }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    {{- include "enschedule.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: worker
  template:
    metadata:
      {{- with .Values.worker.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: worker
    spec:
      {{- with .Values.worker.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enschedule.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.worker.podSecurityContext | nindent 8 }}
      volumes:
        - name: worker-config
          configMap:
            name: {{ include "enschedule.fullname" . }}-worker-config
      containers:
        - name: worker
          volumeMounts:
            - name: worker-config
              mountPath: /app/packages/worker/definitions/index.js
              subPath: index.js
          securityContext:
            {{- toYaml .Values.worker.securityContext | nindent 12 }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          env:
            - name: POSTGRES
              value: "true"
            - name: DB_USER
              value: "postgres"
            - name: DB_HOST
              value: "database-service"
            - name: DB_PASSWORD
              value: "postgres"
            - name: DB_DATABASE
              value: "postgres"
            - name: API_KEY
              value: "secret_key"
            - name: ENSCHEDULE_API
              value: "true"
            - name: API_PORT
              value: "8000"
            - name: DB_PORT
              value: "{{ .Values.database.service.port }}"
            - name: DEBUG
              value: "pg-driver,worker"
            - name: WORKER_ID
              value: "helm-deployed-worker"
            - name: WORKER_NAME
              value: "Default worker"
            - name: WORKER_DESCRIPTION
              value: "Worker deplyed with the helm chart"
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
