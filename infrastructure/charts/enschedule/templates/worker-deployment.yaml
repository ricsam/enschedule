{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    {{- include "enschedule.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "2"
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: worker
  template:
    metadata:
      {{- with .Values.worker.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: worker
    spec:
      {{- with .Values.worker.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enschedule.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.worker.podSecurityContext | nindent 8 }}
      volumes:
        - name: worker-config
          configMap:
            name: {{ include "enschedule.fullname" . }}-worker-config
        {{- if .Values.worker.extraVolumes }}
        {{- toYaml .Values.worker.extraVolumes | nindent 8 }}
        {{- end }}
      containers:
        - name: worker
          volumeMounts:
            - name: worker-config
              mountPath: /enschedule-functions/functions.js
              subPath: functions.js
            {{- if .Values.worker.extraVolumeMounts }}
            {{- toYaml .Values.worker.extraVolumeMounts | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.worker.securityContext | nindent 12 }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          env:
            - name: POSTGRES
              value: "true"
            - name: DB_USER
              value: "postgres"
            - name: DB_HOST
              value: "database-service"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: pgPassword
            - name: DB_DATABASE
              value: "postgres"
            - name: NAFS_URI
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: nafsUri
            - name: ENSCHEDULE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: apiKey
            - name: ENSCHEDULE_ACCESS_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: accessTokenSecret
            - name: ENSCHEDULE_REFRESH_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: refreshTokenSecret
            - name: ADMIN_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: adminAccount
            - name: ENSCHEDULE_API
              value: "true"
            - name: ENSCHEDULE_API_PORT
              value: "8000"
            - name: ENSCHEDULE_API_HOSTNAME
              value: "0.0.0.0"
            - name: DB_PORT
              value: {{ .Values.database.service.port | quote }}
            - name: DEBUG
              value: "pg-driver,worker,worker-cli"
            - name: ENSCHEDULE_WORKER_ID
              value: "helm-deployed-worker"
            - name: ENSCHEDULE_WORKER_NAME
              value: "Default worker"
            - name: ENSCHEDULE_WORKER_DESCRIPTION
              value: "Worker deplyed with the helm chart"
            - name: ENSCHEDULE_FUNCTIONS
              value: "/enschedule-functions/functions.js"
            {{- if .Values.worker.extraEnvs }}
            {{- toYaml .Values.worker.extraEnvs | nindent 12 }}
            {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
