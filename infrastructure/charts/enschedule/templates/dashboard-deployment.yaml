{{- if .Values.dashboard }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
  labels:
    {{- include "enschedule.labels" . | nindent 4 }}
    app.kubernetes.io/name: dashboard
spec:
  replicas: {{ .Values.dashboard.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: dashboard
  template:
    metadata:
      {{- with .Values.dashboard.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: dashboard
    spec:
      {{- with .Values.dashboard.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enschedule.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.dashboard.podSecurityContext | nindent 8 }}
      containers:
        - name: dashboard
          securityContext:
            {{- toYaml .Values.dashboard.securityContext | nindent 12 }}
          image: "{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.dashboard.resources | nindent 12 }}
          env:
            - name: COOKIE_SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: cookieSessionSecret
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: apiKey
            - name: ACCESS_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: accessTokenSecret
            - name: REFRESH_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: refreshTokenSecret
            - name: HTTPS_ONLY_COOKIES
              value: {{ .Values.config.httpsOnlyCookies | quote }}
            - name: WORKER_URL
              value: "http://worker-service:{{ .Values.worker.service.port }}"
            - name: DEBUG
              value: worker-api
            - name: NAFS_URI
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: nafsUri
      {{- with .Values.dashboard.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dashboard.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dashboard.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
